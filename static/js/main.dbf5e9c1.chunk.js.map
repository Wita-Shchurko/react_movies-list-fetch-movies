{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","response","setResponse","_useState5","_useState6","previewMovie","setPreviewMovie","_useState7","_useState8","error","setError","_useState9","_useState10","searchBtn","setSearchBtn","_useState11","_useState12","loading","setloading","useEffect","newFilm","Title","Plot","Poster","concat","imdbID","resetForm","_Fragment","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","finally","htmlFor","value","onChange","target","type","id","placeholder","classNames","disabled","onClick","find","film","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbf5e9c1.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (arg: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  setMovies,\n}) => {\n  const [search, setSearch] = useState('');\n  const [response, setResponse]\n  = useState<MovieData | ResponseError | {}>({});\n  const [previewMovie, setPreviewMovie] = useState<Movie | {}>({});\n  const [error, setError] = useState(false);\n  const [searchBtn, setSearchBtn] = useState('Find a movie');\n  const [loading, setloading] = useState(false);\n\n  const handleSetSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setSearch(event.target.value);\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setloading(true);\n    getMovie(`[${search}]`)\n      .then(setResponse)\n      .finally(() => setloading(false));\n  };\n\n  useEffect(() => {\n    if ('Title' in response) {\n      const newFilm = {\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        imdbId: response.imdbID,\n      };\n\n      setPreviewMovie(newFilm);\n      setSearchBtn('Search again');\n    }\n\n    if ('Error' in response) {\n      setError(true);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [response]);\n\n  const resetForm = () => {\n    setSearch('');\n    setResponse({});\n    setPreviewMovie({});\n  };\n\n  const handleAddMovie = () => {\n    if ('imdbId' in previewMovie) {\n      if (movies.find(film => film.imdbId === previewMovie.imdbId)) {\n        resetForm();\n      } else {\n        setMovies([...movies, previewMovie]);\n        resetForm();\n      }\n    }\n\n    setSearchBtn('Find a movie');\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmitForm}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={search}\n              onChange={handleSetSearch}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input', {\n                  'is-danger': error,\n                },\n              )}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button', 'is-light', {\n                  'is-loading': loading,\n                },\n              )}\n              disabled={!search}\n            >\n              {searchBtn}\n            </button>\n          </div>\n\n          {'title' in previewMovie && (\n            <div className=\"control\">\n              <button\n                onClick={handleAddMovie}\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {'title' in previewMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={previewMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=6a35665b';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}